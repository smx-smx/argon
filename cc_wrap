#!/usr/bin/env bash
CC=gcc

patch_remove_static(){
	local symbol="$1"
	echo -ne "s/static(.*${symbol})/\$1/g"
}

if [[ "$@" == *"gas/symbols.c" ]]; then
	file_path="${@: -1}"
	# exclude last argument
	args="${@:1:$(($#-1))}"

	exec ${CC} ${args} -x c - < <(
		echo "# 1 \"${file_path}\""
		cat "${file_path}"
		cat <<-EOF
		size_t __argon_get_symbol_size(void);
		size_t __argon_get_symbol_size(void) {
		    return sizeof(struct symbol);
		}
		EOF
	)
elif [[ "$@" == *"gas/read.c" ]]; then
	file_path="${@: -1}"
	# exclude last argument
	args="${@:1:$(($#-1))}"

	exec ${CC} ${args} -x c - < <(
		echo "# 1 \"${file_path}\""
		p="$(patch_remove_static "po_hash")"
		cat "${file_path}" | perl -pe "${p}"
	)
elif [[ "$@" == *"gas/config/tc-riscv.c" ]]; then
	file_path="${@: -1}"
	# exclude last argument
	args="${@:1:$(($#-1))}"

	exec ${CC} ${args} -x c - < <(
		echo "# 1 \"${file_path}\""
		p="$(patch_remove_static "riscv_subsets")"
		cat "${file_path}" | perl -pe "${p}"
	)
elif [[ "$@" == *"gas/config/tc-ppc.c" ]]; then
	file_path="${@: -1}"
	# exclude last argument
	args="${@:1:$(($#-1))}"

	exec ${CC} ${args} -x c - < <(
		echo "# 1 \"${file_path}\""
		p="$(patch_remove_static "ppc_hash")"
		p="${p};$(patch_remove_static "ppc_macro_hash")"
		cat "${file_path}" | perl -pe "${p}"
	)
else
	exec ${CC} "$@"
fi
